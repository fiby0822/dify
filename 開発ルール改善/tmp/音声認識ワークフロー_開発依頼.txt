# DifyのYML（DSL）ファイル作成依頼

## 開発依頼概要
音声ファイルのURLを受け取り、OpenAI Audio APIを使用して文字起こしを行い、結果を構造化して出力する音声認識ワークフローを開発してください。

### 開発要件
- **バージョン**: 0.3.0
- **ノード構成**:
  1. Start（開始）ノード
  2. 音声認識（Custom-Tool）ノード - OpenAI Audio APIを使用
  3. Template Transform ノード - 認識結果の整形
  4. End（終了）ノード

### 機能要件
1. 音声ファイルのURLを入力として受け取る
2. OpenAI Audio APIを使用して音声を文字起こし
3. 文字起こし結果に以下の情報を付加：
   - 使用したモデル名
   - 処理日時
   - 音声ファイルURL
4. 整形された結果を出力

### 音声認識ノードの設定
- プラグイン: lysonober/openai_audio
- モデル: gpt-4o-transcribe（高品質）
- provider_type: builtin（※marketplaceではない）
- その他の設定は音声認識コンポーネント記述ルールに従う

## 開発ルール

### 必ず参照すべきファイル
1. **全体コーディングルール**
   - `/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール.txt`

2. **コンポーネント別コーディングルール**
   - `/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_音声認識.txt`

3. **品質チェック関連**（開発後に必ずセルフレビュー）
   - `/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md`
   - `/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/クラッシュ事項チェックリスト.md`
   - `/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/コードチェック.md`
   - `/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/エラー事例集.md`

### 重要な注意事項
1. **template-transformノードの変数参照**
   - 必ず `{{ 変数名 }}` 形式を使用（`{{#変数名#}}` は絶対に使用しない）
   - 変数参照を間違えると実行時にクラッシュする

2. **YMLファイルの保存先**
   - `/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/音声認識ワークフロー_[日付].yml`

3. **セルフレビューの実施**
   - YMLファイル作成後、必ず品質チェックリストに基づいてセルフレビューを実施
   - 問題が見つかった場合は修正を行う

## 出力形式
- Dify DSL YML形式（version: 0.3.0）
- ファイル名: 音声認識ワークフロー_[YYYYMMDD].yml
# Dify YMLファイル作成依頼プロンプト

## 要件
顧客リスト管理システムを作成してください。

**処理フロー：**
1. ユーザーからの操作選択を受け付ける（確認/追加/更新）
2. 選択された操作に応じて処理を分岐：
   - 「確認」：顧客リストの現在の状況を表示
   - 「追加」：新規顧客を最終行に追加
   - 「更新」：指定した顧客のステータスを更新

**詳細仕様：**
- Google Sheetsの「顧客リスト」シートに以下の形式でデータが格納されている：
  - A列：顧客名
  - B列：案件名
  - C列：金額
  - D列：ステータス
- 操作はIF_ELSEノードで分岐処理
- 追加時は現在の行数を取得して、その次の行に新規データを追加
- 更新時は顧客名で検索して該当行のステータスを更新

**技術仕様：**
- version: 0.3.0を使用
- Google Sheets操作はomluc/google_sheets:0.0.2を使用
- IF_ELSEノードで操作種別を判定
- template-transformノードで適切にデータを整形
- Codeノードは使用しない

**入力：**
- spreadsheet_id（Google Sheetsの識別子）
- operation（操作種別：確認/追加/更新）
- 追加時：顧客名、案件名、金額、ステータス
- 更新時：顧客名、新しいステータス

**出力：**
- 操作結果のメッセージ

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/ 
の全てのルールを参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール
フォルダ内の使用するコンポーネントについてのtxtファイルを必ず参照してください。

特に今回は以下を重点的に参照：
- コンポーネント記述ルール_IF_ELSE.txt
- コンポーネント記述ルール_GoogleShpredSheet操作.txt

### 3. 品質チェック
YMLファイル作成後は
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/クラッシュ事項チェックリスト.md
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/コードチェック.md
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/エラー事例集.md
を参照し、必ずセルフレビューを実施してください。チェックに引っかかった場合は、ymlファイルを改修すること。

### template-transformノードに関する重要な注意事項

template-transformノードを使用する場合、以下の記法ルールを必ず守ってください：

1. **変数参照は{{ 変数名 }}形式のみ使用**
   - ❌ 間違い: {{#変数名#}}
   - ✅ 正解: {{ 変数名 }}

2. **フィルター使用時も同様**
   - ❌ 間違い: {{#変数 | trim | tojson#}}
   - ✅ 正解: {{ 変数 | trim | tojson }}

3. **Google Sheetsデータの参照**
   - batch_get出力は配列形式
   - 必ず[0]でアクセス: sheet_data[0].values

これらのルールを守らないと、実行時にクラッシュします。

### 特に注意すべきポイント

1. **IF_ELSEコンポーネント：**
   - logical_operatorは条件が1つでも必須（"and"または"or"）
   - 比較演算子はASCII文字のみ（">=", "<=", "!="）
   - エッジのsourceHandleは条件合致時はcase_id、デフォルトは"false"（文字列）
   - targetTypeには接続先ノードの実際のdata.typeを指定

2. **Google Sheets操作：**
   - provider_typeは必ず"builtin"
   - batch_getのrangesは引用符で囲む
   - batch_updateの前には必ずtemplate-transformで整形
   - 出力参照は.jsonまたは.output（.dataは無効）

3. **行数取得と更新位置の特定：**
   - 読み取ったデータの配列長から行数を計算
   - 顧客名で検索する場合はLLMで該当行を特定
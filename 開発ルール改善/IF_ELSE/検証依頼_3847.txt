# Dify YMLファイル作成依頼プロンプト

## 要件
IF_ELSEコンポーネントのコーディングルールの動作検証を行うため、以下の機能を持つDifyアプリケーションを作成してください：

1. **基本的なIF_ELSEノード機能の検証**
   - ユーザーからの入力を受け取り、複数の条件分岐を実装
   - 数値比較、文字列比較、部分一致など、様々な比較演算子を使用
   - 論理演算子（and/or）を使った複合条件の検証

2. **検証する条件パターン**
   - パターン1: 数値の大小比較（スコアが80点以上かどうか）
   - パターン2: 文字列の完全一致（カテゴリが特定の値かどうか）
   - パターン3: 文字列の部分一致（キーワードを含むかどうか）
   - パターン4: 複合条件（複数の条件をandで結合）
   - パターン5: OR条件（複数の条件をorで結合）

3. **ワークフロー構成**
   - ユーザー入力を分析して、スコアとカテゴリを判定するLLMノード
   - 5つの異なる条件パターンを持つIF_ELSEノード
   - 各条件に応じた適切な処理と回答

4. **エラーケースの考慮**
   - どの条件にも当てはまらない場合のデフォルト処理
   - 無効な入力への対応

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に、コンポーネント記述ルール_IF_ELSE.txt を重点的に参照し、記載されているルールをすべて適用してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

## 特に注意すべき点
- IF_ELSEノードのtype属性は"if-else"（ハイフン付き）
- 各ケースには必ずユニークなidを設定
- variable_selectorは配列形式で記述
- 比較演算子の種類を正しく使用（is, is not, contains, >, < など）
- 論理演算子はandまたはorのみ
- エッジのsourceHandleで各ケースの分岐先を正しく設定
- デフォルトケースの処理も考慮
# Dify YMLファイル作成依頼プロンプト

## 要件
改善されたIF/ELSEコンポーネントルールの動作検証用YMLファイルを作成してください。
最新のルール改善により追加された注意事項を厳密に守り、以下の項目が正しく実装されることを確認できるワークフローを構築してください。

### 検証項目

#### 1. YAMLコメントの完全排除
- YAMLファイル内に一切のコメント（#で始まる行）を含めない
- codeノード内のPythonコードにもコメントを含めない
- 説明が必要な場合はdescフィールドを活用

#### 2. case_idの必須実装
- すべてのIF/ELSEケースでidとcase_idを同じ値で設定
- case_idの欠落がないことを確認

#### 3. 分岐後の変数参照パターン
- **推奨パターン1（独立answer型）**: 各分岐から直接answerノードへ接続
- **推奨パターン2（条件の明確な差別化）**: 各条件が重複しないように設計
- 実行されないパスの変数を参照しない設計

#### 4. エッジフィールドの正確性
- data.isInLoop: false（isInIterationは使用しない）
- targetTypeに実際のノードタイプを指定（customではない）
- selected: falseとzIndex: 0を必ず設定

#### 5. 必須構造の実装
- advanced-chatモードでgraphセクションを使用
- app.use_icon_as_answer_icon: falseを設定
- version: 0.3.0を使用

### ワークフロー構成
以下の構成で改善ルールの動作を検証してください：

1. **Start**: 開始ノード（variables: []で空配列）

2. **入力解析ノード（code）**: 
   - ユーザー入力を解析して数値を抽出
   - Pythonコードにコメントを含めない
   - descフィールドで処理内容を説明

3. **数値範囲判定（IF/ELSE）**:
   - 低スコア（0-30）
   - 中スコア（31-70）
   - 高スコア（71-100）
   - 各ケースにcase_idを必ず設定
   - Unicode比較演算子（≤）を使用

4. **文字列パターン判定（IF/ELSE）**:
   - 緊急キーワードを含む
   - 通常キーワードを含む
   - その他
   - 独立answer型パターンで実装

5. **各分岐の結果表示**:
   - 各IF/ELSEケースから独立したanswerノードへ接続
   - 実行されないパスの変数を参照しない

6. **End**: 終了処理

### 実装上の注意事項

#### 絶対に守るべきルール
1. YAMLファイル内にコメントを一切含めない
2. すべてのIF/ELSEケースにcase_idを設定
3. isInLoopを使用（isInIterationは誤り）
4. targetTypeに実際のノードタイプを指定
5. app.use_icon_as_answer_iconを必ず設定

#### 推奨される実装
1. 独立answer型パターンを使用して変数参照エラーを防ぐ
2. 条件が重複しないように明確に差別化
3. descフィールドを活用して説明を記載
4. エラーが発生しやすいパターンを避ける

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_IF_ELSE.txt

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

特に以下の改善点に注意：
- YAMLコメント制限の強化
- app.use_icon_as_answer_iconの必須化
- エッジのisInLoop使用（isInIterationは誤り）
- advanced-chatモードでのgraphセクション必須化

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。

特にコンポーネント記述ルール_IF_ELSE.txtの改善版を厳密に遵守してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

特に以下の点を重点的にチェック：
- セクション0.3（構造エラーの確認）のYAMLコメント関連
- セクション0.4（エッジフィールドの確認）
- セクション0.6（エラー頻発箇所の特別チェック）

## 追加要件
- YMLファイル名には、ランダムな4桁の整数を含めてください
- 改善ルールの効果を確認できるよう、各検証項目を明確に実装してください
- クラッシュを防ぐため、全ての必須フィールドを正確に設定してください
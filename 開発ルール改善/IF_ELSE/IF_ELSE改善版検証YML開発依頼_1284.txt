# Dify YMLファイル作成依頼プロンプト

## 要件
最新版IF/ELSEコンポーネントルールの動作検証用YMLファイルを作成してください。

以下の検証項目を網羅するワークフローを作成してください：

1. **case_id必須化の検証**
   - 全てのケースにidとcase_idの両方を正しく設定
   - case_idはidと同じ値を設定することを確認

2. **Unicode比較演算子の検証**
   - 数値比較では必ずUnicode文字（≥、≤、≠）を使用
   - ASCII文字（>=、<=、!=）は使用しない

3. **変数参照エラー防止の検証**
   - 実行されない分岐のノードの変数を参照しない
   - 推奨パターン1（独立answer型）を実装
   - 各分岐から直接answerノードへ接続

4. **条件の明確な差別化**
   - 各ケースの条件が重複しないよう設計
   - 数値範囲の判定は順番に評価されることを考慮

5. **エラー防止設計**
   - YAMLコメントを一切含めない（descフィールドで代替）
   - app.use_icon_as_answer_icon: falseを必ず設定
   - エッジのisInLoop、selected、zIndexを正しく設定
   - targetTypeには実際のノードタイプを使用

ワークフローは以下の流れで実装してください：
1. Start → 変数設定ノード（テスト用の数値とカテゴリを生成）
2. → IF/ELSE（数値範囲判定：低/中/高）→ 各分岐で独立したanswerノード
3. → IF/ELSE（カテゴリ判定：A/B/その他）→ 各分岐で独立したanswerノード
4. → IF/ELSE（複合条件：AND/OR）→ 各分岐で独立したanswerノード

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

特に以下の点を厳守：
- YAMLコメントを一切含めない
- app.use_icon_as_answer_icon: falseを必ず設定
- エッジのisInLoop: false（isInIterationではない）
- version: 0.3.0を使用
- advanced-chatモードではgraphセクション内にedgesとnodesを配置

### 2. コンポーネント別コーディングルール
特に以下のルールを厳守してください：
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_IF_ELSE.txt を必ず参照し、最新の改善事項を全て適用すること

重要な改善点：
- case_idフィールドの必須化（最頻出エラー）
- Unicode比較演算子の使用（≥、≤、≠）
- 変数参照エラーの防止（実行されない分岐の変数を参照しない）
- 推奨パターン1（独立answer型）の採用
- 条件の明確な差別化

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

特に以下のチェック項目を重点的に確認：
- セクション0.6（エラー頻発箇所の特別チェック）
- IF/ELSEノードのcase_id設定
- Unicode文字の正しい使用
- 変数参照の妥当性
# Dify YMLファイル作成依頼プロンプト

## 要件
更新されたIF/ELSEコンポーネントのコーディングルールが正しく動作することを検証するためのDifyアプリケーションを作成してください。
特に、case_idフィールドの必須化とUnicode比較演算子の使用を確実に検証する必要があります。

### 検証項目
1. **case_idフィールドの検証**
   - 各ケースにidとcase_idの両方が設定されているか（同じ値）
   - sourceHandleがケースのidと一致しているか

2. **Unicode比較演算子の検証**
   - 数値比較で"≥"、"≤"、"≠"が正しく動作するか
   - ASCII文字（">=", "<=", "!="）を使用していないか

3. **必須フィールドの検証**
   - 外側のtype属性が"custom"
   - data.typeが"if-else"
   - data.selectedがfalse
   - data.titleが設定されている
   - heightとwidthが適切に設定されている

4. **各種比較演算子の網羅的テスト**
   - 文字列比較（contains, start with, end with, is, is not）
   - 数値比較（=, ≠, >, <, ≥, ≤）
   - NULL/存在チェック（empty, not empty, null, not null, exists, not exists）

### アプリケーションの内容
以下の流れで動作する総合評価アプリケーションを作成してください：
1. ユーザーからの評価対象の入力を受け取る
2. 評価分析を行うLLMノード（スコア、カテゴリ、重要度を出力）
3. 複雑な条件分岐（IF/ELSE）：
   - ケース1: 高評価（スコア ≥ 85 かつ 重要度が"高"を含む）
   - ケース2: 中評価（スコア ≥ 60 かつ スコア < 85）
   - ケース3: 低評価（スコア < 60 または カテゴリが"要改善"）
   - ケース4: 特別対応（カテゴリが"緊急"で始まる）
   - デフォルト: その他の評価
4. 各分岐先で異なる対応を生成
5. 最終的な評価結果を表示

すべてのケースでidとcase_idを同じ値に設定し、Unicode比較演算子を使用して、更新されたルールの完全な遵守を確認してください。

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に、更新されたコンポーネント記述ルール_IF_ELSE.txt の内容を厳密に遵守してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

### 4. 特別な注意事項
- 各ケースには必ずidとcase_idの両方を設定し、同じ値にする
- 数値比較では必ずUnicode文字（"≥"、"≤"、"≠"）を使用
- 外側のtype属性は"custom"、data内のtypeは"if-else"
- ファイル名には「改善ルール検証_IF_ELSE_6438.yml」を使用すること
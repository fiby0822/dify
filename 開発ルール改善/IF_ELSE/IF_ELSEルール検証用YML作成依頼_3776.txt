# Dify YMLファイル作成依頼プロンプト

## 要件
IF/ELSEコンポーネントの記述ルールが正しく機能するかを検証するため、以下の要素を含むテスト用Difyアプリケーションを作成してください：

1. **基本的な条件分岐**
   - 単一条件による分岐（is演算子）
   - 数値比較による分岐（>, <, >=, <=）
   - 文字列の部分一致による分岐（contains, not contains）

2. **複雑な条件分岐**
   - 複数条件のAND結合
   - 複数条件のOR結合
   - ネストした条件分岐（IF/ELSEノードの連続使用）

3. **エッジケース**
   - デフォルトケースの処理
   - 条件に一致しない場合の処理

4. **実用的なユースケース**
   - ユーザー入力の分類（カテゴリ判定）
   - 数値スコアによる評価レベル判定
   - 複合条件による処理経路の選択

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に、コンポーネント記述ルール_IF_ELSE.txt の内容を厳密に遵守してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

## 注意事項
- IF/ELSEノードは適切なheightとwidthを設定すること
- 各ケースのIDは意味のある名前にすること
- エッジのsourceHandleで分岐先を正確に指定すること
- 外側のtype属性は必ず"custom"にすること
- positionAbsoluteはpositionと同じ値にすること
- 比較演算子の種類を正しく使用すること（is, is not, contains, not contains, >, <, >=, <=）
- 論理演算子はandまたはorのみ使用可能
- variable_selectorは配列形式で記述すること
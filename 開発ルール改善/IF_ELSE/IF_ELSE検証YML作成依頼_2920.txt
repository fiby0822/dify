# Dify YMLファイル作成依頼プロンプト

## 要件
IF_ELSEコンポーネントの動作検証用YMLファイルを作成してください。
このYMLファイルは、コンポーネント記述ルール_IF_ELSE.txtに記載されているルールが正しく動作することを確認するためのテストケースです。

### 検証項目：
1. **必須パラメータの検証**
   - idとcase_idが両方正しく設定されているか
   - selectedがfalseに設定されているか
   - titleが設定されているか

2. **比較演算子の検証**
   - Unicode演算子（≥、≤、≠）が正しく動作するか
   - 文字列比較（contains, is, start with等）が動作するか
   - NULL/存在チェック（empty, not empty, null, not null）が動作するか

3. **条件分岐の動作検証**
   - 単一条件での分岐が正しく動作するか
   - 複数条件（logical_operator: and/or）での分岐が正しく動作するか
   - デフォルトケース（falseハンドル）が正しく動作するか

4. **エッジ接続の検証**
   - 各ケースからの分岐が正しく接続されているか
   - sourceHandleにケースのidが正しく使用されているか

5. **分岐後の変数参照**
   - 実行された分岐のノードからのみ変数参照が可能なことを確認
   - 独立answer型パターンで各分岐が独立して動作することを確認

### テストシナリオ：
「ユーザーの入力値（数値）に基づいて、異なるメッセージを返すワークフロー」を作成してください。
- 入力値が30以下の場合：「低い値です」
- 入力値が31-70の場合：「中間の値です」
- 入力値が71以上の場合：「高い値です」
- 数値以外の入力の場合：「数値を入力してください」

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_IF_ELSE.txt

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。

### 3. 品質チェック
YMLファイル作成後は
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/クラッシュ事項チェックリスト.md
を参照し、必ずセルフレビューを実施してください。

### 特に注意すべき点：
1. IF_ELSEノードでは必ずidとcase_idの両方を設定すること
2. 数値比較にはUnicode演算子（≥、≤、≠）を使用すること
3. 各分岐は独立して動作するよう設計すること（独立answer型パターンを推奨）
4. エッジ接続のsourceHandleには必ずケースのidを使用すること
# Dify YMLファイル作成依頼プロンプト

## 要件
IF_ELSEコンポーネントの動作検証用YMLファイルを作成してください。
以下の機能を網羅的にテストできるワークフローを実装してください：

1. **基本的な条件分岐**
   - 単一条件での分岐（is演算子を使用）
   - 数値比較での分岐（>, <, >=, <=演算子を使用）
   - 文字列の部分一致での分岐（contains, not contains演算子を使用）

2. **複数条件の組み合わせ**
   - AND条件での分岐（logical_operator: "and"）
   - OR条件での分岐（logical_operator: "or"）

3. **エッジケースのテスト**
   - デフォルトケースの動作確認
   - 複数のケースIDを持つ分岐

4. **実用的なシナリオ**
   - ファイル存在チェック後の処理分岐
   - 数値スコアによる評価分岐
   - カテゴリ分類による処理振り分け

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_IF_ELSE.txt

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に、コンポーネント記述ルール_IF_ELSE.txt の内容を厳密に守ってください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

## 追加要件
- ファイル名は「IF_ELSE_検証_7294.yml」とすること
- 各IF_ELSEノードには意味のあるIDを付けること（例: "condition_check", "validation_node"）
- エッジ接続を正しく設定し、分岐先が明確になるようにすること
- テスト用の変数を適切に設定すること
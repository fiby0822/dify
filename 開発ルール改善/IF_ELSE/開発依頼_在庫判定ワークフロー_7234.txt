# 商品在庫判定ワークフローの開発

## 1. 要件
商品の在庫数に基づいて購入可能性と配送情報を判定するワークフローを作成してください。

### 機能要件：
- ユーザーから商品の在庫数（数値）を入力として受け取る
- IF/ELSEノードを使用して在庫数に応じた判定を行う
- 以下の条件で分岐：
  - 在庫が100個以上の場合：「在庫充分です。即日発送可能です。」
  - 在庫が10個以上100個未満の場合：「在庫あります。通常2-3日で発送します。」
  - 在庫が1個以上10個未満の場合：「在庫わずかです。お早めにご注文ください。」
  - 在庫が0個の場合：「申し訳ございません。現在在庫切れです。」
- 各条件に応じた適切なメッセージを最終的に返す

### 技術要件：
- Codeノードは使用しない
- IF/ELSEノードで複数条件の分岐を実装
- 数値比較にはASCII文字の比較演算子を使用（>, <, >=, <=, ==）
- Unicode文字（≥、≤、≠）は使用禁止

## 2. アウトプット
- フォルダパス: /Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE
- ファイル形式: YMLファイル

## 3. 参考資料
以下のフォルダ内の資料を参照してください：
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール

## 4. ルール準拠
以下のコーディングルールに必ず準拠してください：

### 全体ルール
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全般・基本コーディングルール/01_Difyワークフロー開発共通ルール.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全般・基本コーディングルール/02_ノード設定ルール.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全般・基本コーディングルール/03_変数記述と参照ルール.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全般・基本コーディングルール/04_エッジ記述ルール.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全般・基本コーディングルール/05_変数書き込み-読み取りデータ型整合性ルール.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全般・基本コーディングルール/06_エラー-デバッグ-ロギングルール.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全般・基本コーディングルール/07_コメント禁止ルール.txt

### コンポーネント別ルール
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_start.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_answer.txt
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_IF_ELSE.txt

## 5. 品質チェック
作成後、以下のチェックリストに従ってセルフレビューを実施してください：
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/クラッシュ事項チェックリスト.md

## 6. 注意事項
- YAMLファイル内にコメントは一切記載しない
- IF/ELSEノードの条件記述は正確に行う
- 各条件には必ずIDを設定する
- case_idフィールドを必ず設定する
- エッジ接続時のsourceHandleとtargetTypeを正しく設定する
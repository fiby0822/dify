# Dify YMLファイル作成依頼プロンプト

## 要件
IF/ELSEコンポーネントの動作検証用YMLファイルを作成してください。

以下の検証項目を網羅するワークフローを作成してください：

1. **基本的な条件分岐の検証**
   - 単一条件での分岐（文字列の完全一致）
   - 複数条件でのAND条件
   - 複数条件でのOR条件

2. **比較演算子の検証**
   - 文字列比較（contains, is, is not等）
   - 数値比較（Unicode文字の≥、≤、≠を使用）
   - NULL/存在チェック（empty, not empty, exists等）

3. **複雑な分岐パターン**
   - 3つ以上のケースを持つ分岐
   - ネストされた条件分岐（IF/ELSEノードを連続して使用）

4. **エラーケースの確認**
   - 全ての条件に合致しない場合のデフォルトケース処理

ワークフローは以下の流れで実装してください：
1. Start → 変数定義ノード（テスト用の各種変数を設定）
2. → IF/ELSE（基本分岐）→ 各分岐でLLMノードで結果出力
3. → IF/ELSE（数値比較）→ 各分岐でLLMノードで結果出力
4. → IF/ELSE（複雑な条件）→ 各分岐でLLMノードで結果出力
5. → End

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
特に以下のルールを厳守してください：
- /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_IF_ELSE.txt を必ず参照し、記載されている全ての注意事項を守ること
- 特に重要な点：
  - 外側のtype属性は"custom"、data.typeが"if-else"
  - 各ケースにidとcase_idの両方が必須（同じ値を設定）
  - 数値比較にはUnicode文字（≥、≤、≠）を使用
  - 必須フィールド（selected、title、height、width、positionAbsolute等）を漏れなく記載

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。
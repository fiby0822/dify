# Dify YMLファイル作成依頼プロンプト

## 要件
IF/ELSEコンポーネントの動作検証用YMLファイルを作成してください。以下の検証項目を網羅的にテストできるワークフローを実装してください。

### 検証項目
1. **必須パラメータの動作確認**
   - 外側のtype属性が"custom"で正しく動作すること
   - data.typeが"if-else"で正しく認識されること
   - case_idとidが同じ値で正しく動作すること
   - height, width, position, positionAbsoluteが正しく設定されること
   - data.selected, data.titleが必須項目として機能すること

2. **比較演算子の網羅的テスト**
   - 文字列比較: contains, not contains, start with, end with, is, is not, in, not in, all of
   - 数値比較: =, ≠, >, <, ≥, ≤（Unicode文字の正確な使用）
   - NULL/存在チェック: empty, not empty, null, not null, exists, not exists

3. **条件ケースのパターンテスト**
   - 単一条件のケース
   - 複数条件のケース（logical_operator: and）
   - 複数条件のケース（logical_operator: or）
   - デフォルトケース（falseハンドル）の動作

4. **エラーケースの検証**
   - case_idが欠落した場合の挙動
   - 比較演算子にASCII文字（">="など）を使用した場合の挙動
   - 必須パラメータが欠落した場合の挙動

### ワークフロー構成
以下のノードを含むワークフローを作成してください：

1. **Start**: 開始ノード
2. **変数初期化ノード**: テスト用の各種変数を設定
   - 文字列変数（複数パターン）
   - 数値変数（複数パターン）  
   - NULL値、空文字列
   - リスト型変数
3. **IF/ELSEノード（複数）**: 各検証項目をテストする条件分岐
   - 文字列比較テスト用
   - 数値比較テスト用（Unicode文字使用）
   - NULL/存在チェック用
   - 複合条件テスト用
4. **結果出力ノード**: 各分岐の結果を出力
5. **End**: 終了ノード

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_IF_ELSE.txt

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。

特に今回は、コンポーネント記述ルール_IF_ELSE.txtの内容を厳密に遵守してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

## 追加要件
- YMLファイル名には、ランダムな4桁の整数を含めてください
- 各検証項目が独立してテストできるよう、分かりやすいノード名とコメントを付けてください
- エラーケースの検証では、意図的にルール違反のコードを含めてください（コメントで明示）
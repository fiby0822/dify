# Dify YMLファイル作成依頼プロンプト

## 要件
IF/ELSEコンポーネントのルールが正しく動作するかを検証するためのDify YMLファイルを作成してください。

以下の全ての機能を網羅的にテストできるワークフローを作成してください：

1. 基本的な条件分岐（単一条件）
   - 数値の比較（>, <, >=, <=）
   - 文字列の完全一致（is）
   - 文字列の不一致（is not）
   - 文字列の部分一致（contains）
   - 文字列の部分不一致（not contains）

2. 複数条件の組み合わせ
   - AND条件での複数条件評価
   - OR条件での複数条件評価

3. 複数ケースの分岐
   - 3つ以上のケースを持つ分岐
   - デフォルトケースの動作確認

4. 変数参照の動作確認
   - 前段ノードからの変数取得
   - ネストした変数の参照

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/IF_ELSE

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に、コンポーネント記述ルール_IF_ELSE.txt を必ず参照し、ルールに従って実装してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

## 追加要件
- ファイル名には「IF_ELSE_検証_2544.yml」という名前を使用してください
- 各テストケースが明確に区別できるよう、適切なノード名を付けてください
- エラーケースも含めて、IF/ELSEコンポーネントの全機能が検証できるようにしてください
- コメントを適切に追加し、どの機能をテストしているかを明確にしてください
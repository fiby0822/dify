# Dify YMLファイル作成依頼プロンプト

## 要件
LLMコンポーネントの記述ルールが正しく動作するかを検証するためのDifyアプリケーションを作成してください。

### 検証項目
1. **基本的なLLMノードの動作確認**
   - シンプルな質問応答システムを実装
   - systemロールとuserロールの両方を使用
   - 変数参照機能を使用して他ノードからの入力を受け取る

2. **必須パラメータの検証**
   - すべての必須パラメータが正しく設定されているか
   - structured_output_enabled: false
   - vision.enabled: false
   - variables: []
   - height/width/positionの設定

3. **プロンプトテンプレートの検証**
   - 複数のプロンプト（system/user）の動作確認
   - 各プロンプトにユニークIDが設定されているか
   - 変数参照（{{#node_id.variable#}}形式）が正しく機能するか

4. **温度パラメータの動作確認**
   - 異なるtemperature設定（0.0と0.9）の2つのLLMノードを作成
   - 同じ入力に対する出力の違いを比較できるようにする

### アプリケーション構成
- startノード：ユーザーからの質問を受け取る
- LLMノード1（factual_llm）：事実ベースの回答（temperature: 0.0）
- LLMノード2（creative_llm）：創造的な回答（temperature: 0.9）
- endノード：両方の回答を表示

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/LLM

## 参考資料フォルダパス（あれば）
特になし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に以下のファイルを重点的に参照：
- コンポーネント記述ルール_LLM.txt
- コンポーネント記述ルール_start.txt
- コンポーネント記述ルール_end.txt

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

### 4. 特記事項
- LLMノードのtype属性は外側も内側（data.type）も必ず"llm"に設定
- positionAbsoluteは必須でpositionと同じ値を設定
- プロンプトテンプレートの各要素には必ずユニークなid属性を付与
- structured_output_enabledとvision.enabledは必ずfalseに設定（省略不可）
- variablesフィールドは空配列でも必須
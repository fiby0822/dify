# Dify YMLファイル作成依頼プロンプト

## 要件
LLMコンポーネントのコーディングルールの動作検証を行うため、以下の機能を持つDifyアプリケーションを作成してください：

1. **基本的なLLMノード機能の検証**
   - ユーザーからの質問を受け取り、AIアシスタントとして回答する
   - systemロールで役割を定義し、userロールでユーザー入力を処理する
   - 変数参照機能（{{#node_id.variable_name#}}形式）を使用する

2. **複数のLLMノードの連携検証**
   - 第1のLLMノード：ユーザーの質問を分析し、質問カテゴリを判定
   - 第2のLLMノード：第1のノードの分析結果を受けて、適切な回答を生成
   - ノード間でのデータ受け渡しを検証

3. **パラメータ設定の検証**
   - temperatureを異なる値で設定（分析用：0.1、回答生成用：0.7）
   - max_tokensの制限設定
   - 必須パラメータ（structured_output_enabled, vision.enabled等）の適切な設定

4. **エラーケースの考慮**
   - 入力が空の場合の処理
   - 不適切な入力への対応

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/LLM

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に、コンポーネント記述ルール_LLM.txt を重点的に参照し、記載されているルールをすべて適用してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

## 特に注意すべき点
- YAMLファイルの最上位構造を正しく設定（app、workflow、kind、dependencies、version）
- 外側のtype属性は"custom"固定
- data.typeに実際のコンポーネントタイプを設定
- positionAbsolute、height、widthを必ず設定
- prompt_templateには必ずid属性を付与
- advanced-chatモードでのstartノードのvariables設定に注意（空配列[]にする）
- YAMLコメントはノード定義の外側に配置
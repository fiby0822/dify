# Dify YMLファイル作成依頼プロンプト

## 要件
最新のLLMコンポーネントルールが正しく機能することを検証するため、以下の要件を満たすDifyアプリケーションのYMLファイルを作成してください：

1. **advanced-chatモードの正しい実装**
   - startノードのvariablesは必ず空配列[]
   - ユーザー入力は{{#sys.query#}}で参照
   - すべての必須フィールドを含む

2. **LLMノードの完全な実装**
   - type: "custom"（外側のtype属性）
   - contextとmemoryフィールドを含む
   - プロバイダーはシンプルな形式（"openai"）
   - 複数のロール（system, user）を使用

3. **実用的なユースケース**
   - FAQ自動応答システム
   - ユーザーの質問を分析し、適切なカテゴリに分類
   - カテゴリに応じた詳細な回答を生成

4. **品質検証のポイント**
   - インポート、表示、実行すべて正常に動作すること
   - エラーが発生しないこと（特に"required in input form"エラー）
   - YAMLファイル内にコメントを含めない

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/LLM

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

特に重要な点：
- advanced-chatモードを使用
- startノードのvariablesは空配列[]（絶対に変数を定義しない）
- ユーザー入力は{{#sys.query#}}で参照
- すべてのノードの外側typeは"custom"
- 必須フィールド（dependencies, kind, version等）を忘れない

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。

特に「コンポーネント記述ルール_LLM.txt」の以下の点に注意：
- advanced-chatモードでの注意事項セクション
- contextとmemoryフィールドの設定
- プロバイダー名の形式

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。

特に以下を確認：
- startノードのvariablesが空配列であること
- 動作エラー診断セクションの内容
- モード別ベストプラクティスガイドの内容
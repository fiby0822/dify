# Dify YMLファイル作成依頼プロンプト

## 要件
更新されたLLMコンポーネントの記述ルールを検証するため、以下の機能を持つDifyアプリケーションを作成してください：

1. ユーザーからの質問を受け取る
2. 3つのLLMノードで異なる処理を行う：
   - 第1LLMノード：質問の意図を分析（memory設定を完全に省略）
   - 第2LLMノード：詳細な回答を生成（memory設定を完全な構造で記載、enabledはfalse）
   - 第3LLMノード：回答を要約（memory設定を完全な構造で記載、enabledはtrue）
3. 最終的な回答を表示する

具体的な仕様：
- advanced-chatモードを使用
- startノードでユーザー入力を受け取る（variables=[]必須）
- 各LLMノードで異なるmemory設定パターンを実装
- GPT-4oモデルを使用
- 各LLMノードで異なるtemperature設定（0.3、0.7、0.5）
- answerノードで最終的な要約を返す

検証ポイント：
- memory設定の省略が正しく動作するか
- memory設定の完全構造（window含む）が正しく動作するか
- enabledがfalseとtrueの両方で正しく動作するか
- 更新されたルールに完全準拠しているか

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/LLM

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。

特に重要：
- コンポーネント記述ルール_LLM.txt のmemory設定に関する更新内容を厳密に遵守してください
- memory設定を使用する場合は、必ずwindowフィールドを含む完全な構造で記載してください
- memory設定が不要な場合は、フィールド自体を省略してください

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。
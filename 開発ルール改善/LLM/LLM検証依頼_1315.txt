# Dify YMLファイル作成依頼プロンプト

## 要件
更新されたLLMコンポーネントルール（特にクラッシュ対策）が正しく動作することを検証するためのYMLファイルを作成してください。

### 目的
最新のコーディングルール改善（特に致命的エラー防止ルール）が適切に実装されていることを確認する。

### 機能要件
1. **基本機能**
   - ユーザーからの質問に対して、複数段階の処理を経て回答を生成する
   - advanced-chatモードを使用
   - 複数のLLMノードを連携させた処理フロー

2. **重要な検証項目**
   **致命的エラー防止の検証：**
   - すべての必須セクションが最上位に正しく配置されている
   - dependencies、kind、versionが必ず存在する
   - app.use_icon_as_answer_iconが設定されている
   - featuresセクションがworkflow内に配置されている（最上位ではない）
   - YAMLファイル内にコメントを含まない

   **LLMノード固有の検証：**
   - 外側のtype属性が"custom"に設定されている
   - positionAbsoluteが設定されている
   - height/widthが設定されている
   - prompt_templateの各要素にID属性が設定されている
   - structured_output_enabledとvision.enabledがfalseで設定されている
   - contextフィールドが設定されている
   - advanced-chatモードでstartノードのvariablesが空配列[]
   - ユーザー入力の参照に{{#sys.query#}}を使用

3. **処理フロー**
   - ユーザーの質問を受け取る（startノード）
   - 質問を分析する（1つ目のLLMノード）
   - 分析結果を基に詳細な回答を生成する（2つ目のLLMノード）
   - 最終的な回答を整形して出力する（3つ目のLLMノード）
   - 結果を表示する（answerノード）

### アプリケーション名
「LLMルール検証_クラッシュ対策確認」

### 特別な注意事項
- 最小構成テンプレートから開発を開始すること
- 致命的エラーチェックリストのすべての項目を満たすこと
- YAMLファイル内に一切のコメントを含めない
- descフィールドで説明を記載する

## アウトプットフォルダパス
/Users/tatsuya/Documents/01_fiby/09_ゼット/Dev/LLM

## 参考資料フォルダパス（あれば）
なし

## コーディングルール
Dify YMLファイルの作成にあたっては、以下のコーディングルールに従ってください：

### 1. 全体コーディングルール
/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/全体コーディングルール.md を参照してください。
**特に重要**：
- セクション2.1「必須セクション構成（最重要）」を厳守
- セクション14「最小構成テンプレート」から開発を開始
- セクション15「開発時の推奨フロー」の開発前チェックリストを実施

### 2. コンポーネント別コーディングルール
各コンポーネントを使用する際は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール フォルダ内の該当するtxtファイルを参照してください。
特に「コンポーネント記述ルール_LLM.txt」の「よくある間違い（クラッシュの原因）」セクションを重点的に確認してください。

### 3. 品質チェック
YMLファイル作成後は、/Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md を参照し、必ずセルフレビューを実施してください。
**特に重要**：「0. 致命的エラーチェック（最優先）」のすべての項目を必ず確認すること。
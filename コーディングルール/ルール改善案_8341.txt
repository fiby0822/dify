Difyコーディングルール改善案
作成日: 2025年7月2日
対象: WEB検索機能の実装に関するルール追加

■概要
Tavily Searchツールを使用したWEB検索機能の実装を通じて、既存のコーディングルールに以下の改善・追加を提案します。

================================================================================
① 全体コーディングルール（/全体コーディングルール/全体コーディングルール.md）への追加提案
================================================================================

【セクション4.0 使用可能なノードタイプの詳細】への追加
- toolノードの説明に「マーケットプレイスツール（Tavily Search等）」の具体例を追加
- 外部APIツール使用時の注意事項を明記

【新規セクション: 23.0 マーケットプレイスツールの使用】
```
23.0 マーケットプレイスツールの使用

23.1 依存関係の定義
- dependenciesセクションでの宣言が必須
- marketplace_plugin_unique_identifierの完全一致が必要
- バージョン番号の指定を含む

23.2 ツール固有パラメータ
- provider_id, provider_type, tool_nameの3つは固定値
- is_team_authorizationの設定が必要な場合がある
- tool_parametersとtool_configurationsの同期に注意

23.3 Boolean値の扱い
- tool_configurationsでは数値（0/1）での指定が必要な場合がある
- tool_parametersではboolean型を使用
```

【セクション0: よくある失敗パターン】への追加
```
0.8 マーケットプレイスツールの依存関係未定義
- 症状: Tool not foundエラー
- 原因: dependenciesセクションの記述漏れ
- 対策: 使用するツールのdependencies定義を必ず追加

0.9 tool_parametersとtool_configurationsの不整合
- 症状: パラメータが反映されない
- 原因: 両方に設定が必要なパラメータの片方のみ設定
- 対策: 両セクションの値を同期させる
```

================================================================================
② コンポーネント別コーディングルール への改善提案
================================================================================

【既存ファイルの構造統一】
- コンポーネント記述ルール_知識検索.txt の形式を標準フォーマットとして採用
- 全てのコンポーネント別ルールファイルに以下のセクションを必須化：
  - ■ブロック概要
  - ■ノードタイプ
  - ■必須パラメータ
  - ■オプションパラメータ
  - ■入力
  - ■出力
  - ■使用例
  - ■注意事項
  - ■ベストプラクティス
  - ■トラブルシューティング

【新規追加ファイル】
- コンポーネント記述ルール_検索.txt （作成済み）
- 今後追加予定：
  - コンポーネント記述ルール_HTTP要求.txt
  - コンポーネント記述ルール_変数集約.txt
  - コンポーネント記述ルール_パラメータ抽出.txt

================================================================================
③ 品質チェックリスト（/品質チェック/品質チェックリスト.md）への追加提案
================================================================================

【セクション4: コンポーネント別チェックリスト】への追加
```
## 4.7 toolノード（マーケットプレイスツール）
□ dependenciesセクションでツールの依存関係が定義されているか
□ provider_id、provider_type、tool_nameが正確に設定されているか
□ 必須パラメータ（特にquery）が適切に設定されているか
□ tool_parametersとtool_configurationsの値が同期しているか
□ boolean値の0/1変換が必要な場合、正しく設定されているか
□ is_team_authorizationがtrueに設定されているか（必要な場合）
□ APIクォータを考慮した設定になっているか（max_results等）
```

【セクション8: 外部連携確認】への追加
```
## 8.4 マーケットプレイスツール連携
□ 使用するツールのAPIキーやアクセス権限が設定されているか
□ エラーハンドリング（空の結果、タイムアウト等）が実装されているか
□ 出力サイズが適切に制限されているか
□ 後続ノードで検索結果を適切に処理しているか
```

================================================================================
④ クラッシュ事項チェックリスト（/品質チェック/クラッシュ事項チェックリスト.md）への追加提案
================================================================================

【セクション2: codeノード関連】への追加
```
2.10 toolノードからの出力処理
□ toolノードの出力（text、json、files）を正しく参照しているか
□ 検索結果が空の場合のnullチェックを実装しているか
```

【新規セクション13: マーケットプレイスツール関連】
```
## 13. マーケットプレイスツール関連

13.1 依存関係エラー
□ dependenciesセクションが存在するか
□ marketplace_plugin_unique_identifierが完全一致しているか
□ current_identifierがnullになっているか

13.2 パラメータ型エラー  
□ boolean値を数値（0/1）で指定すべき箇所を確認
□ 文字列型パラメータに不正な値（null等）が入っていないか
□ 必須パラメータが全て設定されているか

13.3 実行時エラー
□ APIクォータ超過によるエラーハンドリング
□ ネットワークタイムアウトの考慮
□ 大量データ取得時のメモリ制限
```

================================================================================
■実装優先度

1. 【最優先】全体コーディングルールへのマーケットプレイスツールセクション追加
   - 理由: 今後増えるであろう外部ツール連携の基本ルールとなるため

2. 【高優先】品質チェックリストへのtoolノードチェック項目追加
   - 理由: 実装時の見落としを防ぐため

3. 【中優先】クラッシュ事項チェックリストへの追加
   - 理由: 実際のエラー事例が蓄積されてから更新する方が効果的

4. 【低優先】他のコンポーネント別ルールファイルの形式統一
   - 理由: 段階的に実施可能で、既存機能への影響が少ないため

================================================================================
■今後の課題

1. **ツールバージョン管理**
   - マーケットプレイスツールのバージョンアップ時の互換性確認プロセス
   - 旧バージョンとの差分管理

2. **パフォーマンス基準**
   - 各ツールの推奨タイムアウト値
   - 最大データサイズの目安

3. **セキュリティガイドライン**
   - APIキーの管理方法
   - 外部ツールへの送信データの検証

4. **テストガイドライン**
   - マーケットプレイスツールを含むワークフローのテスト方法
   - モックデータの作成基準

================================================================================

以上が、WEB検索機能実装を通じて発見されたコーディングルールの改善案です。
特にマーケットプレイスツールの使用に関するルールが不足していたため、
これらの追加により、今後の外部ツール連携がよりスムーズに行えるようになります。
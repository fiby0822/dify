# パラメータ抽出（parameter-extractor）使用ルール改善案

## 改善背景
現在のコーディングルールではパラメータ抽出に関して以下の矛盾が存在します：
- 全体ルール（02_ワークフロー設計.md）：使用可能なノードタイプとしてリストされている
- 品質チェックリスト：「使用は要検討」と記載
- コンポーネント記述ルール：「使用禁止」と明記されているが、動作確認済みサンプルでは使用されている

この矛盾を解消し、適切な使用条件を明確化する必要があります。

## 改善提案

### 1. パラメータ抽出の使用を条件付きで許可

#### 許可される使用ケース
1. **LLMからの出力から目的を持って変数を抽出したい場合**
   - 小説のタイトルや章立てなど、構造化された情報を抽出
   - 営業データから顧客名、金額、日付などの特定情報を抽出
   
2. **LLMの出力にはゆらぎがあるため、後続処理に明確な形式で値を渡したい場合**
   - 数値計算に使用する金額の抽出（カンマや通貨記号の処理）
   - 日付形式の統一化（YYYY-MM-DD形式への変換）
   - Boolean値の明確化（はい/いいえ → true/false）

#### 使用を避けるべきケース
1. 単純な文字列操作で対応可能な場合（codeノードを使用）
2. 入力データが既に構造化されている場合
3. 複雑な条件分岐や計算を含む場合

## 各ファイルへの反映内容

### 1. /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/コンポーネント別コーディングルール/コンポーネント記述ルール_パラメータ抽出.txt

**変更前（6行目）：**
```
**重要**: 既存のコーディングルールでは使用禁止とされていますが、動作確認済みサンプルでは使用されています。代替手段としてLLMノードまたはcodeノードの使用も検討してください。
```

**変更後：**
```
**重要**: パラメータ抽出は以下の条件でのみ使用を許可します：
1. LLMからの出力から目的を持って変数を抽出したい場合
2. LLMの出力のゆらぎを吸収し、後続処理に明確な形式で値を渡したい場合

それ以外の場合は、LLMノードでのJSON出力指定またはcodeノードの使用を推奨します。
```

**追加内容（89行目以降に追加）：**
```
■使用許可条件
1. LLM出力からの構造化データ抽出
   - 小説のタイトル、章立てなどの文学的要素
   - 営業データ（顧客名、金額、日付）
   - 製品情報（品名、価格、在庫数）

2. データ形式の統一化
   - 数値：「1,000円」→ 1000（number型）
   - 日付：「2024年1月1日」→ "2024-01-01"（string型）
   - Boolean：「はい」→ true

■使用禁止条件
- 単純な文字列分割や正規表現で処理可能な場合
- 入力が既にJSON等の構造化データの場合
- 複雑なビジネスロジックを含む場合

■実装例（許可されるケース）
```yaml
# LLM出力から営業データを抽出
id: sales_data_extraction
type: parameter-extractor
data:
  model:
    provider: openai
    name: gpt-4o
    mode: chat
  parameters:
    - name: "customer_name"
      type: string
      description: "顧客名（会社名または個人名）"
      required: true
    - name: "sales_amount"
      type: number
      description: "売上金額（数値のみ、単位は円）"
      required: true
    - name: "contract_date"
      type: string
      description: "契約日（YYYY-MM-DD形式）"
      required: true
  query:
    - llm_sales_analysis
    - text
```
```

### 2. /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/品質チェックリスト.md

**変更前（364行目）：**
```
- [ ] parameter-extractorの抽出項目が明確に定義されている（注：使用は要検討）
```

**変更後：**
```
- [ ] parameter-extractorの使用が許可条件を満たしている（LLM出力の構造化またはデータ形式統一化）
- [ ] parameter-extractorの抽出項目が明確に定義されている
```

### 3. /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/品質チェック/コードチェック.md

**追加内容（適切な箇所に追加）：**
```
### パラメータ抽出（parameter-extractor）のチェック項目
- [ ] LLM出力からの構造化データ抽出、またはデータ形式統一化の目的で使用されている
- [ ] 単純な文字列操作で代替可能でない
- [ ] 抽出パラメータの型（string/number/boolean/array[string]）が適切に設定されている
- [ ] descriptionが明確で、LLMが理解しやすい内容になっている
- [ ] 必須項目（required: true）は本当に必須なもののみに限定されている
```

### 4. /Users/tatsuya/Documents/01_fiby/09_ゼット/コーディングルール/全体コーディングルール/02_ワークフロー設計.md

**追加内容（ノードタイプの説明部分に注記を追加）：**
```
| パラメータ抽出 | parameter-extractor | パラメータ抽出 | ※条件付き使用：LLM出力の構造化またはデータ形式統一化の場合のみ |
```

## 実装優先順位
1. コンポーネント記述ルール_パラメータ抽出.txt の更新（最重要）
2. 品質チェックリスト.md の更新
3. コードチェック.md への追加
4. 02_ワークフロー設計.md への注記追加

## 期待される効果
1. ルール間の矛盾解消
2. パラメータ抽出の適切な使用促進
3. LLM出力の構造化における品質向上
4. 開発者の混乱防止

## 補足
- 既存の動作確認済みサンプル（パラメータ抽出テスト.yml）は、小説のタイトルと章立ての抽出という、まさに許可される使用ケースの良い例となっています
- この改善により、実用的なワークフロー開発がより円滑に進むことが期待されます
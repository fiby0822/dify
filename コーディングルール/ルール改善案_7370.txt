# コーディングルール改善案

## 改善背景
動作エラーケース1〜4の分析により、Tavily Searchツールノードの実装において、現行のコーディングルールでは不十分な部分が判明しました。全てのケースで共通して、tool_parametersの形式エラーと必須フィールドの欠落が原因となっています。

## 改善が必要な箇所

### 1. コンポーネント記述ルール_WEB検索.txt の改善点

#### 現状の問題点
- tool_parametersの記述方法が不完全
- paramSchemasセクションについての記載が存在しない
- provider_nameとtool_labelフィールドが必須であることが明記されていない

#### 改善案

**1.1 必須パラメータに以下を追加：**
```yaml
5. provider_name: "langgenius/tavily/tavily"
   - 固定値として必須
   - provider_idとは別に必要

6. tool_label: "Tavily Search"
   - 固定値として必須
   - titleとは別に必要

7. paramSchemas:
   - 必須（パラメータのスキーマ定義配列）
   - 各パラメータの定義を含む
```

**1.2 tool_parametersの正しい形式を明記：**
```yaml
# 誤った形式（現在のルールに従った場合）
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
  search_depth: basic  # ❌ これはエラーになる

# 正しい形式（改善後）
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
  search_depth:
    type: mixed
    value: basic  # ✅ type/value形式が必須
```

**1.3 paramSchemasセクションの追加：**
```yaml
paramSchemas:
  - name: query
    type: string
    label: Search Query
    required: true
    form: llm
  - name: search_depth
    type: select
    label: Search Depth
    required: false
    default: basic
    options:
      - value: basic
        label: Basic
      - value: advanced
        label: Advanced
  # 他のパラメータも同様に定義
```

### 2. 全体コーディングルール.md の改善点

#### 改善案

**2.1 セクション4.0.3「toolノードの使用ガイドライン」に以下を追加：**

```markdown
#### toolノードの必須フィールド（改訂版）
toolノードを使用する際は、以下のフィールドが必須です：

1. provider_id: プロバイダーID
2. provider_name: プロバイダー名（provider_idと同じ値を設定）
3. provider_type: "builtin"
4. tool_name: ツール名
5. tool_label: ツールラベル（UIに表示される名前）
6. tool_parameters: パラメータ定義（全てtype/value形式）
7. tool_configurations: 設定値
8. paramSchemas: パラメータスキーマ定義配列
9. is_team_authorization: チーム認証フラグ
```

**2.2 セクション12.10「ツールノード関連のエラー」に以下を追加：**

```markdown
#### パラメータ形式エラー
- 症状：「Value of ... is not dict」エラー
- 原因：tool_parametersで直接値を設定している
- 対処法：全てのパラメータをtype/value形式で記述

例：
# ❌ 間違い
search_depth: basic

# ✅ 正解
search_depth:
  type: mixed
  value: basic
```

### 3. 品質チェックリスト.md の改善点

#### 改善案

**3.1 「toolノード固有のチェック項目」セクションを追加：**

```markdown
## toolノード固有のチェック項目

### 必須フィールドチェック
- [ ] provider_nameが設定されているか
- [ ] tool_labelが設定されているか
- [ ] paramSchemasが定義されているか

### パラメータ形式チェック
- [ ] tool_parameters内の全パラメータがtype/value形式か
- [ ] tool_configurationsが正しく設定されているか
- [ ] paramSchemasとtool_parametersが一致しているか
```

### 4. クラッシュ事項チェックリスト.md の改善点

#### 改善案

**4.1 「toolノード関連のクラッシュ原因」セクションを追加：**

```markdown
## toolノード関連のクラッシュ原因

### 1. パラメータ形式エラー
- **症状**: 実行時に「Value of ... is not dict」エラー
- **原因**: tool_parametersで直接値を設定
- **防止策**: 全パラメータをtype/value形式で記述

### 2. 必須フィールド欠落
- **症状**: ツールの初期化に失敗
- **原因**: provider_name、tool_label、paramSchemasの欠落
- **防止策**: 必須フィールドチェックリストを使用

### 3. スキーマ不一致
- **症状**: パラメータが認識されない
- **原因**: paramSchemasとtool_parametersの不一致
- **防止策**: 両者の整合性を確認
```

## 実装優先度

1. **最優先**: コンポーネント記述ルール_WEB検索.txt の更新
   - tool_parametersの正しい形式を明記
   - paramSchemasセクションの追加
   - 必須フィールドの明確化

2. **高優先**: 品質チェックリスト.md への追加
   - toolノード固有のチェック項目追加

3. **中優先**: 全体コーディングルール.md の更新
   - toolノードの必須フィールド一覧の更新
   - エラー診断セクションの充実

4. **通常**: クラッシュ事項チェックリスト.md の更新
   - toolノード関連のクラッシュ原因追加

## 期待される効果

1. **エラー率の大幅削減**: tool_parametersの形式エラーがなくなる
2. **開発効率の向上**: 必須フィールドが明確になり、試行錯誤が減る
3. **品質の安定化**: チェックリストによる事前検証で動作エラーを防止
4. **メンテナンス性向上**: paramSchemasによりパラメータ管理が明確化

## 移行時の注意事項

1. 既存のYMLファイルは新ルールに従って修正が必要
2. 特にtool_parametersの形式変更は必須
3. paramSchemasの追加は段階的に実施可能
4. 正常動作する検索テスト.ymlを参考実装として活用

以上の改善により、Tavily Searchを含むtoolノードの実装品質が大幅に向上し、動作エラーの発生を防止できます。
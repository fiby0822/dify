コンポーネント記述ルール: 知識検索

■ブロック概要
事前に登録されたナレッジベース（知識データベース）から関連情報を検索・取得するノード。FAQ、マニュアル、技術文書などの検索に使用。

■必須パラメータ
- id: 意味のある名前（例: "knowledge_search_node", "faq_retrieval"）
- type: "custom"（ノード全体のtype - 固定）
- position:
  - x: 任意の値
  - y: 任意の値
- positionAbsolute:（positionと同値で設定）
  - x: 任意の値
  - y: 任意の値
- width: 244（推奨値）
- height: 92（推奨値）
- sourcePosition: right
- targetPosition: left
- selected: false（固定値）
- data:
  - type: "knowledge-retrieval"（data内のtype - 固定）
  - dataset_ids: 検索対象データセットIDの配列
    - "データセットID文字列"
  - query_variable_selector: クエリテキストの参照元
    - ノードID
    - フィールド名
  - retrieval_mode: 検索モード（"single"または"multiple"）
  - desc: ''（空文字列でも必須）
  - selected: false（固定値）
  - title: ノードのタイトル


■オプションパラメータ
- multiple_retrieval_config: 複数検索モード時の詳細設定
  - reranking_enable: リランキング有効化（boolean）
  - reranking_mode: リランキングモード（"weighted_score"等）
  - top_k: 取得する結果の最大数
  - weights: 重み設定
    - keyword_setting:
      - keyword_weight: キーワード検索の重み（0-1）
    - vector_setting:
      - embedding_model_name: 埋め込みモデル名
      - embedding_provider_name: プロバイダー名
      - vector_weight: ベクトル検索の重み（0-1）

■エッジ接続
- 入力エッジ（前のノードから接続）:
  - targetHandle: target
  - targetType: knowledge-retrieval
- 出力エッジ（次のノードへ接続）:
  - sourceHandle: source
  - sourceType: knowledge-retrieval

■入力
- query_variable_selector: 検索クエリテキストの変数参照

■出力
- result: 検索結果のテキスト
- metadata: 検索結果のメタ情報（オプション）

■使用例
```yaml
# 単一データセット検索
- data:
    dataset_ids:
      - "7ccfkMYSp7EbvPLfz84xM+MGWesznlJf6laOpWdSR4vOjJa6XZ3W7JdALMg/4IRY"
    desc: ''
    query_variable_selector:
      - start_node
      - user_query
    retrieval_mode: single
    selected: false
    title: 知識検索
    type: knowledge-retrieval
  height: 92
  id: knowledge_search_node
  position:
    x: 350
    y: 200
  positionAbsolute:
    x: 350
    y: 200
  selected: false
  sourcePosition: right
  targetPosition: left
  type: custom
  width: 244

# 複数データセット検索（リランキング付き）
- data:
    dataset_ids:
      - "7ccfkMYSp7EbvPLfz84xM+MGWesznlJf6laOpWdSR4vOjJa6XZ3W7JdALMg/4IRY"
      - "8ddglNZTq8FcwQMgz95yN+NHXftzomlKg7mbPqXeTR5wPkJb7YZ4X8KeALNh/5JSZ"
      - "9eehMOaUr9GdxRNha06zO+OIYguaplMLh8ncQrYfUS6xQlKc8Za5Y9LfBMOi/6KTa"
    desc: ''
    multiple_retrieval_config:
      reranking_enable: true
      reranking_mode: weighted_score
      top_k: 4
      weights:
        keyword_setting:
          keyword_weight: 0
        vector_setting:
          embedding_model_name: text-embedding-3-large
          embedding_provider_name: langgenius/openai/openai
          vector_weight: 1
    query_variable_selector:
      - identify_product_spec_node
      - text
    retrieval_mode: multiple
    selected: false
    title: 知識検索
    type: knowledge-retrieval
  height: 92
  id: multi_knowledge_search
  position:
    x: 450
    y: 300
  positionAbsolute:
    x: 450
    y: 300
  selected: true
  sourcePosition: right
  targetPosition: left
  type: custom
  width: 244

# エッジ接続例
- data:
    isInLoop: false
    sourceType: llm
    targetType: knowledge-retrieval
  id: llm-to-knowledge-edge
  selected: false
  source: identify_product_spec_node
  sourceHandle: source
  target: knowledge_search_node
  targetHandle: target
  type: custom
  zIndex: 0
```

■サンプルデータセットID（テスト用）
- "mUJqT0QSpLmBBBGsAg6tP+rLJoOBsXRCgClBvqhk7NKJWFKdH7o5AOBH9nG0DiXe"
- "7ccfkMYSp7EbvPLfz84xM+MGWesznlJf6laOpWdSR4vOjJa6XZ3W7JdALMg/4IRY"
（注意：実際の開発では、事前にDifyで作成したデータセットIDを使用）

■注意事項
- データセットIDは事前にDifyで作成されたものを指定（サンプルではダミーIDを使用）
- retrieval_modeがmultipleの場合、multiple_retrieval_configの設定推奨
- top_kの値が大きすぎると関連度の低い結果も含まれる
- 検索結果がない場合の処理を考慮
- selected: falseは必須（trueにするとエラーの可能性）
- 旧フィールド名に注意:
  - datasets → dataset_ids（正）
  - query → query_variable_selector（正）

■ベストプラクティス
- 適切なtop_k値の設定（3-5推奨）
- クエリの前処理で検索精度向上
- 検索結果の後処理を考慮
- 複数データセットを使う場合は関連性を考慮
- リランキング設定で検索精度を最適化
- ベクトル検索とキーワード検索の重みバランスを調整

■version 0.3.0準拠の注意点
- 必ずversion: 0.3.0のYAMLで使用すること
- positionAbsoluteは必須（positionと同値で設定）
- typeは"custom"で固定（ノード全体のtype）
- data内のtypeは"knowledge-retrieval"で固定
- 全体の構造はworkflow.graph.nodes配列内に配置
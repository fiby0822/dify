# Difyコーディングルール改善案

## 作成日時
2025-07-03

## 分析結果の概要
エラー分析から判明した主要な問題点と、それに対するルール改善案を記載します。

## 1. コンポーネント記述ルール_GoogleShpredSheet操作.txt の改善

### 1.1 provider_typeフィールドの修正

**現状の問題**:
- 例示されている`provider_type: marketplace`は実際にはエラーとなる
- 正しい値のリストが明記されていない

**改善案**:
```yaml
# provider_typeの正しい値（必ずこれらのいずれかを使用）
provider_type: builtin     # Dify内蔵ツール用
provider_type: plugin      # プラグインツール用  
provider_type: workflow    # ワークフローツール用
provider_type: api         # APIツール用
provider_type: app         # アプリツール用
provider_type: dataset-retrieval  # データセット検索用

# 注意：marketplaceは無効な値です（エラーになります）
```

### 1.2 tool_configurationsフィールドの追加

**現状の問題**:
- 必須フィールドである`tool_configurations`が例に含まれていない

**改善案**:
```yaml
# Google Sheetsツールの完全な設定例
- data:
    type: tool
    provider_id: omluc/google_sheets/google_sheets
    provider_name: omluc/google_sheets/google_sheets
    provider_type: builtin  # marketplaceではなくbuiltinを使用
    tool_label: Batch Get
    tool_name: batch_get
    tool_configurations:  # 必須フィールド
      date_time_render_option: FORMATTED_STRING
      major_dimension: null
      value_render_option: null
    tool_parameters:
      ranges:
        type: mixed
        value: '["INPUT!A1:C10"]'
      spreadsheet_id:
        type: mixed
        value: "1dd5IPZBYY5ZtImb48SLnO8c9b4Z8w5YUr1gWF0STqSQ"
```

### 1.3 変数参照形式の明確化

**追加すべき内容**:
```yaml
# toolノードの出力参照方法
# NG：存在しないフィールド
{{#tool_node_id.data#}}  # エラー：dataフィールドは存在しない

# OK：正しい参照方法
{{#tool_node_id.output#}}  # テキスト出力
{{#tool_node_id.json#}}     # JSON形式の出力
{{#tool_node_id.text#}}     # テキスト形式の出力（LLMノード用）
```

## 2. 全体コーディングルール.md の改善

### 2.1 provider_typeエラーパターンの追加

**0.3 インポート失敗パターンに追加**:
```yaml
#### toolノードのprovider_type誤り
# ❌ 間違い：無効なprovider_type
provider_type: marketplace  # エラー：無効な値

# ✅ 正解：有効な値を使用
provider_type: builtin
# または plugin, workflow, api, app, dataset-retrieval のいずれか
```

### 2.2 必須フィールドの明確化

**0.3 インポート失敗パターンに追加**:
```yaml
#### toolノードの必須フィールド欠落
# ❌ 間違い：tool_configurationsが欠落
- data:
    type: tool
    provider_id: omluc/google_sheets
    tool_name: batch_get
    tool_parameters:
      ranges:
        type: mixed
        value: '["A1:B10"]'

# ✅ 正解：必須フィールドを含める
- data:
    type: tool
    provider_id: omluc/google_sheets/google_sheets
    provider_name: omluc/google_sheets/google_sheets
    provider_type: builtin
    tool_label: Batch Get
    tool_name: batch_get
    tool_configurations:  # 必須
      date_time_render_option: FORMATTED_STRING
    tool_parameters:
      ranges:
        type: mixed
        value: '["A1:B10"]'
```

### 2.3 システム予約変数エラーの強化

**新規セクション追加（0.4として）**:
```markdown
### 0.4 システム予約変数（sys.query）エラー

#### 症状
- codeノードで"sys.query is not defined"エラー
- LLMノードでの変数参照エラー

#### 間違った実装
```yaml
# ❌ 間違い：codeノードでimport sysが欠落
- data:
    type: code
    code: |
      user_input = sys.query  # エラー：sysが未定義
      return {"result": user_input}

# ❌ 間違い：プロンプト内でsys.queryを直接使用
prompt_template:
  - text: |
      ユーザーの質問：{{sys.query}}  # エラー：誤った参照形式
```

#### 正しい実装
```yaml
# ✅ 正解：codeノードでimport sys
- data:
    type: code
    code: |
      import sys  # 必須
      user_input = sys.query
      return {"result": user_input}

# ✅ 正解：プロンプト内での正しい参照
prompt_template:
  - text: |
      ユーザーの質問：{{#sys.query#}}  # 正しい参照形式
```

## 3. 品質チェックリスト.md の改善

### 3.1 toolノードチェック項目の強化

**4.8 toolノード（外部ツール）セクションに追加**:
```markdown
#### provider_typeの確認（最重要）
- [ ] **provider_typeが以下のいずれかの値である**
  - builtin
  - plugin
  - workflow
  - api
  - app
  - dataset-retrieval
- [ ] **marketplaceを使用していない（エラーの原因）**
- [ ] **tool_configurationsフィールドが定義されている（必須）**
```

### 3.2 変数参照チェックの詳細化

**5.1 変数参照セクションに追加**:
```markdown
#### toolノードの出力参照
- [ ] toolノードの出力を`.data`で参照していない（存在しないフィールド）
- [ ] `.output`、`.json`、`.text`のいずれかを使用している
- [ ] 参照形式が`{{#node_id.field#}}`になっている
```

## 4. クラッシュ事項チェックリスト.md の改善

### 4.1 toolノードクラッシュ防止項目の追加

**新規セクション（13.9として）**:
```markdown
### 13.9 provider_typeエラーによるクラッシュ

#### 症状
- "Input should be 'plugin', 'builtin', 'workflow', 'api', 'app' or 'dataset-retrieval'"エラー
- インポート時の即座の失敗

#### 原因
- provider_typeに無効な値（marketplace等）を使用

#### チェック項目
- [ ] **provider_typeが有効な値のいずれかである**
- [ ] **marketplaceを使用していない**
- [ ] **スペルミスがない（built-inではなくbuiltin）**

#### 防止策
```yaml
# 使用可能な値の一覧
provider_type: builtin           # Dify内蔵ツール
provider_type: plugin            # プラグインツール
provider_type: workflow          # ワークフローツール
provider_type: api              # APIツール
provider_type: app              # アプリケーションツール
provider_type: dataset-retrieval # データセット検索ツール
```

### 4.2 必須フィールド欠落の強化

**13.1 パラメータ形式エラーに追加**:
```markdown
#### tool_configurations欠落エラー
- **症状**: "tool_configurations Field required"エラー
- **原因**: Google Sheetsツール等で必須のtool_configurationsが未定義
- **防止策**: toolノードには必ずtool_configurationsを含める
```

## 5. 推奨する追加ドキュメント

### 5.1 「よくあるエラーと解決方法.md」の作成

以下の内容を含む新規ドキュメントの作成を推奨：
1. provider_type: marketplaceエラーの解決方法
2. tool_configurations欠落エラーの解決方法
3. 変数参照エラー（.data使用）の解決方法
4. sys.query未定義エラーの解決方法

### 5.2 「正常動作するymlのテンプレート集」の作成

検証YML_5931.ymlのような成功例を基にした、各種ユースケース別のテンプレート集：
1. Google Sheets読み取り専用テンプレート
2. Google Sheets読み書きテンプレート
3. LLMとGoogle Sheets連携テンプレート
4. 条件分岐を含むGoogle Sheets操作テンプレート

## 6. 開発依頼プロンプトへの追加推奨事項

Dify_YML作成依頼プロンプトに以下を追加：

```markdown
### 重要：toolノード使用時の注意事項
1. provider_typeは必ず以下のいずれかを使用してください：
   - builtin, plugin, workflow, api, app, dataset-retrieval
   - marketplaceは使用しないでください（エラーになります）

2. Google Sheetsツール使用時は必ず以下を含めてください：
   - provider_type: builtin
   - tool_configurationsフィールド（必須）
   - 正しいprovider_idとprovider_name

3. 変数参照は以下の形式を使用してください：
   - toolノード出力：{{#node_id.output#}} または {{#node_id.json#}}
   - LLMノード出力：{{#node_id.text#}}
   - .dataは使用しないでください（存在しません）

4. codeノードでsys.queryを使用する場合：
   - 必ずimport sysを記述してください
```

## まとめ

これらの改善により、以下の効果が期待できます：
1. インポート失敗の大幅な削減
2. 実行時エラーの防止
3. 開発者の混乱を防ぐ明確なガイドライン
4. 成功例に基づいた確実な実装方法の提供

特に、provider_typeの値とtool_configurationsの必須化は、今回の分析で判明した最も重要な改善点です。
# Difyコーディングルール改善案

## 改善案作成日：2025年1月15日

## 動作エラー分析結果

### ケース1：コンテキスト長超過エラー
- エラー内容：gpt-4の8192トークン制限を超過（要求8389トークン）
- 原因：WEB検索結果が長文となり、プロンプトと合わせて制限を超過
- 正常動作ファイルはgpt-4oを使用（より長いコンテキストに対応）

### ケース2：構文エラー（推定）
- 必須フィールド（provider_name、tool_label、tool_configurations）の欠落
- tool_parametersの形式エラー（辞書形式でない）

## ルール改善提案

### 1. 全体コーディングルール（全体コーディングルール.md）への追加

#### 1.1 LLMモデル選択ガイドラインの追加（セクション4.2後に追加）

```markdown
### 4.2.2 LLMモデル選択ガイドライン

WEB検索や知識検索など、長文の入力が予想される場合のモデル選択：

#### コンテキスト長による推奨モデル
| 用途 | 推奨モデル | 理由 |
|------|-----------|------|
| WEB検索結果の処理 | gpt-4o、gpt-3.5-turbo | 長いコンテキストに対応 |
| 通常の対話処理 | gpt-4、gpt-4o | 高品質な回答 |
| 知識検索結果の処理 | gpt-4o | 複数文書の処理に対応 |

#### トークン数の目安
- WEB検索（Tavily）の結果：1検索結果あたり約1000-2000トークン
- max_results: 5の場合：最大10000トークン程度
- プロンプトテンプレート：500-1000トークン
- 合計：11000-12000トークン → gpt-4では処理不可

#### 推奨設定
```yaml
# WEB検索を含むワークフローの場合
model:
  provider: openai
  name: gpt-4o  # gpt-4ではなくgpt-4oを使用
  mode: chat
  completion_params:
    max_tokens: 2000  # 余裕を持った設定
```
```

#### 1.2 WEB検索結果の前処理に関する推奨（新規セクション追加）

```markdown
### 4.7.4 検索結果の前処理パターン

#### 推奨構成（検索結果が長い場合）
```
start → 検索クエリ最適化 → WEB検索 → 結果要約/フィルタリング → 最終処理 → answer
```

#### 実装例
1. 検索クエリ最適化ノード
   - ユーザー入力から最適な検索キーワードを抽出
   - 検索意図の明確化

2. 結果要約ノード（中間処理）
   - 検索結果の要点抽出
   - 関連性の低い情報の除外
   - トークン数の削減
```

### 2. WEB検索コンポーネント記述ルール（コンポーネント記述ルール_WEB検索.txt）への追加

#### 2.1 トークン数管理に関する注意事項（セクション「注意事項」に追加）

```markdown
### トークン数管理とモデル選択

1. **検索結果のトークン数見積もり**
   - max_results: 1 → 約1000-2000トークン
   - max_results: 5 → 約5000-10000トークン
   - max_results: 10 → 約10000-20000トークン

2. **後続LLMノードのモデル選択**
   - max_results ≤ 3：gpt-4使用可能
   - max_results > 3：gpt-4oまたはgpt-3.5-turbo推奨
   - include_raw_content: 1の場合：必ずgpt-4o使用

3. **推奨構成パターン**
   ```yaml
   # パターン1：少量検索（gpt-4使用可）
   tool_configurations:
     max_results: 3
     include_raw_content: 0
   
   # パターン2：標準検索（gpt-4o推奨）
   tool_configurations:
     max_results: 5
     include_raw_content: 0
   
   # パターン3：詳細検索（gpt-4o必須）
   tool_configurations:
     max_results: 10
     include_raw_content: 1
   ```
```

#### 2.2 必須フィールドの強調（既存セクションの修正）

```markdown
## 必須パラメータ（修正版）

**警告：以下のフィールドが1つでも欠けるとエラーになります**

1. provider_id: "langgenius/tavily/tavily"
2. provider_type: "builtin"
3. tool_name: "tavily_search"
4. **provider_name: "langgenius/tavily/tavily"**  ← よく忘れられる！
5. **tool_label: "Tavily Search"**  ← よく忘れられる！
6. tool_parameters.query:
7. is_team_authorization: true
8. **tool_configurations: {}**  ← 空でも必須！
```

#### 2.3 tool_parametersの正しい形式（セクション追加）

```markdown
## tool_parametersの正しい記述形式

### 動的値の場合（変数参照）
```yaml
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
```

### 静的値をtool_parametersに誤って記載した場合のエラー
```yaml
# ❌ エラーになる記述
tool_parameters:
  query: '{{#sys.query#}}'  # 辞書形式でない
  max_results: 5  # 静的値は不適切
  
# ✅ 正しい記述
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
tool_configurations:
  max_results: 5  # 静的値はこちらに
```
```

### 3. 品質チェックリスト（品質チェックリスト.md）への追加

#### 3.1 LLMモデル選択チェック項目（セクション4.2に追加）

```markdown
### 4.2 llmノード（追加項目）
- [ ] **WEB検索結果を処理する場合、gpt-4oまたはgpt-3.5-turboを使用している**
- [ ] **検索結果のmax_resultsとLLMモデルの組み合わせが適切**
- [ ] **必要に応じて中間処理ノードで検索結果を要約している**
```

#### 3.2 toolノードチェック項目の強化（セクション4.8を修正）

```markdown
### 4.8 toolノード（外部ツール）強化版
- [ ] **provider_name（見落としやすい必須フィールド）が設定されている**
- [ ] **tool_label（見落としやすい必須フィールド）が設定されている**
- [ ] **tool_configurations（空でも必須）が設定されている**
- [ ] tool_parametersが辞書形式（type/value）で記述されている
- [ ] 静的値がtool_configurationsに配置されている
```

### 4. クラッシュ事項チェックリスト（クラッシュ事項チェックリスト.md）への追加

#### 4.1 トークン数超過によるクラッシュ（新規セクション）

```markdown
## 14. トークン数超過によるクラッシュ防止

### 14.1 モデル別コンテキスト制限
- [ ] **gpt-4使用時：入力+出力が8192トークン以内**
- [ ] **WEB検索でmax_results > 3の場合、gpt-4を使用していない**
- [ ] **長文処理が必要な場合、gpt-4oを使用している**

### 14.2 トークン数削減対策
- [ ] **検索結果を直接LLMに渡していない（中間処理を実装）**
- [ ] **不要に大きなmax_tokensを設定していない**
- [ ] **include_raw_contentを必要最小限に留めている**
```

### 5. 開発依頼プロンプトテンプレート（Dify_YML作成依頼プロンプト_テンプレート.txt）への追加

```markdown
## 追加注意事項

### WEB検索を使用する場合の注意
1. 検索結果が長くなる可能性があるため、後続のLLMノードではgpt-4oの使用を推奨
2. max_resultsは必要最小限に設定（デフォルト5以下を推奨）
3. 必須フィールド（provider_name、tool_label、tool_configurations）の記載を忘れない

### モデル選択の目安
- 通常の対話：gpt-4
- WEB検索結果の処理：gpt-4o
- 大量テキスト処理：gpt-3.5-turbo または gpt-4o
```

## 実装優先度

1. **最優先**：WEB検索コンポーネント記述ルールへの必須フィールド強調とtool_parameters形式の明確化
2. **高優先**：全体コーディングルールへのLLMモデル選択ガイドライン追加
3. **中優先**：品質チェックリストとクラッシュ事項チェックリストへの項目追加
4. **低優先**：開発依頼プロンプトテンプレートへの注意事項追加

## 期待される効果

1. コンテキスト長超過エラーの防止
2. toolノードの必須フィールド欠落エラーの防止
3. tool_parametersの形式エラーの防止
4. 適切なモデル選択による処理効率の向上
5. 検索結果の前処理による品質向上
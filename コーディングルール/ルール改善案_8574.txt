コーディングルール改善案（Dify toolノード関連）

作成日：2025年7月2日
発見された問題：toolノード（特にTavily Search）の必須フィールド不足によるバリデーションエラー

■改善が必要な箇所

【1. コンポーネント記述ルール_WEB検索.txt の改善案】

現状の問題点：
- provider_nameとtool_labelフィールドが必須であることが記載されていない
- tool_parametersの詳細な記述方法が不明確
- paramSchemasについての言及がない

追加すべき内容：
```
■■超重要：実行時必須フィールド（2025年7月時点）
以下のフィールドは省略するとバリデーションエラーとなります：
- provider_name: provider_idと同じ値を設定（例: "langgenius/tavily/tavily"）
- tool_label: ツールの表示名（例: "Tavily Search"）

■tool_parametersの正しい設定方法
重要：tool_parametersには動的な値（ユーザー入力等）のみを設定します。
固定パラメータはtool_configurationsで設定してください。

正しい例：
```yaml
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
# search_depth、topicなどの固定値はここに含めない
```

誤った例（エラーの原因）：
```yaml
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
  search_depth: basic  # ❌ 直接値は不可
  topic: general       # ❌ 直接値は不可
```
```

【2. 全体コーディングルール.md の改善案】

セクション4.8（toolノード）に以下を追加：

```markdown
### 4.8.1 toolノードの必須フィールド（最重要）
- [ ] **provider_name が設定されている（provider_idと同じ値）**
- [ ] **tool_label が設定されている（ツールの表示名）**
- [ ] **tool_parameters には動的値のみ設定**
- [ ] **固定パラメータは tool_configurations で設定**

#### 正しいtoolノード構造の例
```yaml
- data:
    provider_id: langgenius/tavily/tavily
    provider_name: langgenius/tavily/tavily  # 必須
    provider_type: builtin
    tool_name: tavily_search
    tool_label: Tavily Search                 # 必須
    is_team_authorization: true
    tool_parameters:                          # 動的値のみ
      query:
        type: mixed
        value: '{{#sys.query#}}'
    tool_configurations:                      # 固定値はここ
      search_depth: basic
      max_results: 5
      include_answer: 0
```

#### よくある間違い
```yaml
# ❌ 間違い：tool_parametersに固定値を含める
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
  search_depth: basic      # エラーの原因
  topic: general          # エラーの原因
```
```

【3. 品質チェックリスト.md の改善案】

セクション4.8（toolノード）に以下のチェック項目を追加：

```markdown
### 4.8.1 toolノード必須フィールドチェック
- [ ] **provider_name フィールドが存在し、provider_idと同じ値が設定されている**
- [ ] **tool_label フィールドが存在し、適切な表示名が設定されている**
- [ ] **tool_parameters には動的値（queryなど）のみが設定されている**
- [ ] **固定パラメータ（search_depth、topic等）はtool_configurationsに設定されている**
- [ ] **tool_parametersの各値がToolInput形式（type、valueを含む辞書）になっている**
```

【4. クラッシュ事項チェックリスト.md の改善案】

セクション13（toolノード関連）に以下を追加：

```markdown
### 13.5 toolノード必須フィールドのクラッシュ防止
- [ ] **provider_name フィールドが存在する（欠落は即エラー）**
- [ ] **tool_label フィールドが存在する（欠落は即エラー）**
- [ ] **tool_parametersに直接値（文字列、数値、真偽値）を設定していない**
- [ ] **tool_parametersの各値が{type: "mixed", value: "..."} 形式になっている**

#### エラー例と対処法
```
エラー: Field required [type=missing, input_value=..., provider_name
原因: provider_nameフィールドの欠落
対処: provider_nameを追加（provider_idと同じ値）

エラー: Input should be a valid dictionary or instance of ToolInput
原因: tool_parametersに直接値を設定
対処: 固定値はtool_configurationsに移動
```
```

【5. Dify_YML作成依頼プロンプト_テンプレート.txt の改善案】

以下の注意事項を追加：

```
## toolノード（WEB検索等）使用時の必須事項
1. provider_nameとtool_labelフィールドは必須です
2. tool_parametersには動的な値（{{#sys.query#}}等）のみを設定してください
3. search_depth、topic等の固定パラメータはtool_configurationsで設定してください
4. tool_parametersの値は必ず{type: "mixed", value: "..."}の形式にしてください

### 正しい例
```yaml
tool_parameters:
  query:
    type: mixed
    value: '{{#sys.query#}}'
tool_configurations:
  search_depth: basic
  max_results: 5
```
```

■改善の優先度
1. 【最優先】コンポーネント記述ルール_WEB検索.txt - 直接的な原因箇所
2. 【高】クラッシュ事項チェックリスト.md - エラー防止のため
3. 【高】品質チェックリスト.md - 品質保証のため
4. 【中】全体コーディングルール.md - 全体的な理解のため
5. 【中】Dify_YML作成依頼プロンプト_テンプレート.txt - 今後の開発のため

■まとめ
今回の4つのエラーケースは全て同じ原因（toolノードの必須フィールド不足とパラメータ設定方法の誤り）によるものでした。
これは現在のコーディングルールにこれらの必須フィールドに関する記載が不足していることが原因と考えられます。
上記の改善案を適用することで、同様のエラーの発生を防ぐことができます。
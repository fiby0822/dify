app:
  description: |
    商品データベースと連携して、在庫情報や商品詳細を参照しながら顧客問い合わせに対応するシステムです。
    リアルタイムの在庫状況を反映し、正確な情報提供を実現します。
  icon: 🗄️
  icon_background: '#4A90E2'
  mode: advanced-chat
  name: データベース活用型問い合わせ対応システム
  use_icon_as_answer_icon: false
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
        - .PDF
        - .XLSX
        - .CSV
        - .TXT
      allowed_file_types:
        - document
      allowed_file_upload_methods:
        - local_file
      enabled: true
      number_limits: 3
    opening_statement: |
      データベース活用型問い合わせ対応システムへようこそ！
      
      このシステムは、社内の商品データベースと連携して、お客様からの問い合わせに迅速かつ正確に対応します。
      
      以下の情報をご入力ください：
      - 問い合わせ内容
      - 顧客情報（任意）
      - 商品コードまたは商品名（分かる場合）
      
      在庫確認、納期照会、商品仕様の確認など、幅広い問い合わせに対応可能です。
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions:
      - 'SH-2000Aの在庫状況と納期を教えてください'
      - 'パナソニック製の空気清浄機の仕様一覧はありますか？'
      - '型番ABC-123の代替品を提案してください'
      - '過去3ヶ月の問い合わせ履歴を確認したい'
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
  graph:
    edges:
      - id: start-extraction-edge
        source: start_node
        sourceHandle: source
        target: product_info_extraction_node
        targetHandle: target
        type: custom
      - id: extraction-db_query-edge
        source: product_info_extraction_node
        sourceHandle: source
        target: database_query_node
        targetHandle: target
        type: custom
      - id: db_query-validation-edge
        source: database_query_node
        sourceHandle: source
        target: data_validation_node
        targetHandle: target
        type: custom
      - id: validation-auto_answer-edge
        source: data_validation_node
        sourceHandle: 'true'
        target: auto_answer_generation_node
        targetHandle: target
        type: custom
      - id: validation-manufacturer_inquiry-edge
        source: data_validation_node
        sourceHandle: 'false'
        target: manufacturer_inquiry_node
        targetHandle: target
        type: custom
      - id: auto_answer-history-edge
        source: auto_answer_generation_node
        sourceHandle: source
        target: history_record_node
        targetHandle: target
        type: custom
      - id: manufacturer_inquiry-history-edge
        source: manufacturer_inquiry_node
        sourceHandle: source
        target: history_record_node
        targetHandle: target
        type: custom
      - id: history-answer-edge
        source: history_record_node
        sourceHandle: source
        target: answer_node
        targetHandle: target
        type: custom
    nodes:
      - data:
          desc: 顧客からの問い合わせを受け付けます
          selected: false
          title: 開始
          type: start
          variables:
            - label: 問い合わせ内容
              max_length: 2000
              options: []
              required: true
              type: paragraph
              variable: inquiry_content
            - label: 顧客情報
              max_length: 500
              options: []
              required: false
              type: text-input
              variable: customer_info
            - label: 商品コード/商品名
              max_length: 200
              options: []
              required: false
              type: text-input
              variable: product_identifier
        height: 180
        id: start_node
        position:
          x: 50
          y: 250
        selected: false
        sourcePosition: right
        targetPosition: left
        type: start
        width: 244
      - data:
          context:
            enabled: false
            variable_selector: []
          desc: 問い合わせ文から商品情報を抽出
          memory:
            query_prompt_template: ''
            role_prefix:
              assistant: ''
              user: ''
            window:
              enabled: false
              size: 10
          model:
            completion_params:
              temperature: 0.2
            mode: chat
            name: gpt-4o-mini
            provider: openai
          prompt_template:
            - edition_type: basic
              id: 19d3dc59-fa93-4a1f-a063-9a1e16461cd9
              role: system
              text: |
                あなたは商品情報抽出の専門家です。
                問い合わせ文から以下の情報を正確に抽出してください：
                1. メーカー名
                2. 商品名または型番
                3. 問い合わせ種別（在庫確認/仕様確認/納期確認/その他）
                
                JSON形式で出力してください。
            - edition_type: basic
              id: 44a09c6f-4e0f-4e4f-8c4f-f4c4c6f4c4c4
              role: user
              text: |
                問い合わせ内容：{{#start_node.inquiry_content#}}
                商品コード/商品名：{{#start_node.product_identifier#}}
          selected: false
          title: 商品情報抽出
          type: llm
          variables: []
          vision:
            configs:
              detail: high
            enabled: false
        height: 98
        id: product_info_extraction_node
        position:
          x: 350
          y: 250
        selected: false
        sourcePosition: right
        targetPosition: left
        type: llm
        width: 244
      - data:
          code: |
            import json
            import random
            from datetime import datetime, timedelta

            # 抽出された商品情報を解析
            try:
                product_info = json.loads(product_info_json)
            except:
                product_info = {
                    "manufacturer": "不明",
                    "product_name": product_identifier,
                    "inquiry_type": "在庫確認"
                }

            # データベース照会のシミュレーション
            # 実際の実装では、ここでデータベースAPIを呼び出す
            
            # サンプルデータベース（実際はDBから取得）
            sample_db = {
                "SH-2000A": {
                    "manufacturer": "シャープ",
                    "product_name": "空気清浄機 SH-2000A",
                    "stock": 15,
                    "price": 45000,
                    "next_arrival": (datetime.now() + timedelta(days=7)).strftime("%Y-%m-%d"),
                    "specifications": {
                        "適用床面積": "～25畳",
                        "フィルター寿命": "約10年",
                        "消費電力": "最大50W",
                        "サイズ": "幅395×奥行265×高さ540mm"
                    }
                },
                "ABC-123": {
                    "manufacturer": "パナソニック",
                    "product_name": "除湿機 ABC-123",
                    "stock": 0,
                    "price": 38000,
                    "next_arrival": (datetime.now() + timedelta(days=14)).strftime("%Y-%m-%d"),
                    "specifications": {
                        "除湿能力": "12L/日",
                        "タンク容量": "3.5L",
                        "消費電力": "300W",
                        "サイズ": "幅365×奥行202×高さ565mm"
                    }
                }
            }

            # 商品検索
            product_code = product_info.get("product_name", product_identifier)
            db_result = None
            
            for code, data in sample_db.items():
                if code in str(product_code) or str(product_code) in data["product_name"]:
                    db_result = data
                    db_result["product_code"] = code
                    break

            # 検索結果の返却
            if db_result:
                result = {
                    "found": True,
                    "data": db_result,
                    "inquiry_type": product_info.get("inquiry_type", "在庫確認"),
                    "timestamp": datetime.now().isoformat()
                }
            else:
                result = {
                    "found": False,
                    "data": None,
                    "inquiry_type": product_info.get("inquiry_type", "在庫確認"),
                    "timestamp": datetime.now().isoformat()
                }

            return {
                "db_result": json.dumps(result, ensure_ascii=False),
                "data_found": result["found"]
            }
          code_language: python3
          desc: データベースから商品情報を取得
          outputs:
            db_result:
              children: null
              type: string
            data_found:
              children: null
              type: boolean
          selected: false
          title: データベース照会
          type: code
          variables:
            - value_selector:
                - product_info_extraction_node
                - text
              variable: product_info_json
            - value_selector:
                - start_node
                - product_identifier
              variable: product_identifier
        height: 82
        id: database_query_node
        position:
          x: 650
          y: 250
        selected: false
        sourcePosition: right
        targetPosition: left
        type: code
        width: 244
      - data:
          cases:
            - case_id: 'true'
              conditions:
                - comparison_operator: is
                  id: bd2b8110-c6a7-4c8f-93e2-c6c5b5b5b5b5
                  value: 'true'
                  variable_selector:
                    - database_query_node
                    - data_found
              id: 'true'
              logical_operator: and
          default_case_id: 'false'
          desc: データの有効性を確認
          selected: false
          title: データ検証
          type: if-else
        height: 134
        id: data_validation_node
        position:
          x: 950
          y: 250
        selected: false
        sourcePosition: right
        targetPosition: left
        type: if-else
        width: 244
      - data:
          context:
            enabled: false
            variable_selector: []
          desc: DB情報を基に自動回答を生成
          memory:
            query_prompt_template: ''
            role_prefix:
              assistant: ''
              user: ''
            window:
              enabled: false
              size: 10
          model:
            completion_params:
              temperature: 0.3
            mode: chat
            name: gpt-4o-mini
            provider: openai
          prompt_template:
            - edition_type: basic
              id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
              role: system
              text: |
                あなたは丁寧な商品問い合わせ対応の専門家です。
                データベースから取得した情報を基に、お客様に分かりやすく回答してください。
                
                回答には以下を含めてください：
                - 商品の正式名称
                - 在庫状況（具体的な数量）
                - 納期情報
                - 価格（税込）
                - 必要に応じて商品仕様
                
                丁寧で親しみやすい口調で回答してください。
            - edition_type: basic
              id: b2c3d4e5-f6a7-890b-cdef-234567890abc
              role: user
              text: |
                問い合わせ内容：{{#start_node.inquiry_content#}}
                顧客情報：{{#start_node.customer_info#}}
                
                データベース検索結果：
                {{#database_query_node.db_result#}}
          selected: false
          title: 自動回答生成
          type: llm
          variables: []
          vision:
            configs:
              detail: high
            enabled: false
        height: 98
        id: auto_answer_generation_node
        position:
          x: 1250
          y: 150
        selected: false
        sourcePosition: right
        targetPosition: left
        type: llm
        width: 244
      - data:
          context:
            enabled: false
            variable_selector: []
          desc: メーカーへの問い合わせ文を生成
          memory:
            query_prompt_template: ''
            role_prefix:
              assistant: ''
              user: ''
            window:
              enabled: false
              size: 10
          model:
            completion_params:
              temperature: 0.3
            mode: chat
            name: gpt-4o-mini
            provider: openai
          prompt_template:
            - edition_type: basic
              id: c3d4e5f6-a789-0bcd-ef12-345678901234
              role: system
              text: |
                あなたは問い合わせ対応の専門家です。
                データベースに商品情報が見つからない場合の対応を行います。
                
                以下の2つの文章を生成してください：
                1. お客様向け：確認中である旨の丁寧な案内文
                2. メーカー向け：具体的な情報提供依頼文
                
                JSON形式で出力してください：
                {
                  "customer_response": "お客様向けの文章",
                  "manufacturer_inquiry": "メーカー向けの文章"
                }
            - edition_type: basic
              id: d4e5f6a7-890b-cdef-1234-567890abcdef
              role: user
              text: |
                問い合わせ内容：{{#start_node.inquiry_content#}}
                顧客情報：{{#start_node.customer_info#}}
                商品識別情報：{{#start_node.product_identifier#}}
                
                抽出された情報：
                {{#product_info_extraction_node.text#}}
          selected: false
          title: メーカー問い合わせ生成
          type: llm
          variables: []
          vision:
            configs:
              detail: high
            enabled: false
        height: 98
        id: manufacturer_inquiry_node
        position:
          x: 1250
          y: 350
        selected: false
        sourcePosition: right
        targetPosition: left
        type: llm
        width: 244
      - data:
          code: |
            import json
            from datetime import datetime

            # 履歴記録のシミュレーション
            # 実際の実装では、ここでデータベースに記録を保存

            history_entry = {
                "timestamp": datetime.now().isoformat(),
                "inquiry_content": inquiry_content,
                "customer_info": customer_info,
                "product_identifier": product_identifier,
                "response_type": "auto_response" if auto_response else "manufacturer_inquiry",
                "response_content": auto_response if auto_response else manufacturer_response,
                "db_result": db_result if db_result else None
            }

            # ログ出力（実際はDB保存）
            print(f"履歴記録: {json.dumps(history_entry, ensure_ascii=False, indent=2)}")

            # 最終的な回答を整形
            if auto_response:
                final_response = auto_response
            else:
                try:
                    inquiry_data = json.loads(manufacturer_response)
                    final_response = inquiry_data.get("customer_response", manufacturer_response)
                except:
                    final_response = manufacturer_response

            return {
                "final_response": final_response,
                "history_saved": True,
                "record_id": f"INQ-{datetime.now().strftime('%Y%m%d%H%M%S')}"
            }
          code_language: python3
          desc: 問い合わせと回答を履歴に記録
          outputs:
            final_response:
              children: null
              type: string
            history_saved:
              children: null
              type: boolean
            record_id:
              children: null
              type: string
          selected: false
          title: 履歴記録
          type: code
          variables:
            - value_selector:
                - start_node
                - inquiry_content
              variable: inquiry_content
            - value_selector:
                - start_node
                - customer_info
              variable: customer_info
            - value_selector:
                - start_node
                - product_identifier
              variable: product_identifier
            - value_selector:
                - auto_answer_generation_node
                - text
              variable: auto_response
            - value_selector:
                - manufacturer_inquiry_node
                - text
              variable: manufacturer_response
            - value_selector:
                - database_query_node
                - db_result
              variable: db_result
        height: 82
        id: history_record_node
        position:
          x: 1550
          y: 250
        selected: false
        sourcePosition: right
        targetPosition: left
        type: code
        width: 244
      - data:
          answer: |
            {{#history_record_node.final_response#}}

            ---
            対応記録番号: {{#history_record_node.record_id#}}
          desc: 最終的な回答を出力
          selected: false
          title: 回答出力
          type: answer
          variables: []
        height: 105
        id: answer_node
        position:
          x: 1850
          y: 250
        selected: false
        sourcePosition: right
        targetPosition: left
        type: answer
        width: 244

## ケース3: 音声画像認識検証ワークフロー - エラー原因分析

### エラー内容
```
[画像認識処理] ビジョン変数は必須です　とのワーニング
```

### エラー原因
画像認識処理ノード（image_recognition_node）のvision設定で、画像ファイルを参照する変数が指定されていない。

### 詳細分析
1. **問題箇所**: image_recognition_node（363-369行目）
   ```yaml
   vision:
     configs:
       detail: high
       variable_selector: []  # 空配列になっている
     enabled: true
   ```

2. **必要な設定**:
   - variable_selectorに画像ファイルへの参照パスを指定する必要がある
   - startノードで定義されているfile変数を参照すべき

3. **比較結果**:
   - このワークフローは音声と画像の両方を処理するが、画像認識ノードで画像ファイルの参照が欠落
   - vision機能は有効化されているが、処理対象の画像が指定されていない

### 根本原因
- vision.configs.variable_selectorが空配列のまま
- 画像ファイルを指定する変数セレクターが必須だが、設定されていない

### 修正方法
```yaml
vision:
  configs:
    detail: high
    variable_selector:
    - start
    - file  # startノードで定義されたfile変数を参照
  enabled: true
```

### 追加の観察事項
1. **ケース2との共通点**:
   - 両方とも`variable_selector`が空配列 `[]` になっている
   - vision機能を使用する際の必須設定が欠落している

2. **ワークフロー設計の問題**:
   - ファイルタイプを判定して音声/画像を振り分けるフローだが、画像処理部分の設定が不完全
   - if-elseノードで正しく画像を判定しても、その後の画像認識ノードで参照が設定されていない

3. **エラーパターン**:
   - vision設定のテンプレートをコピーした際に、`variable_selector`を設定し忘れる
   - 必須パラメータの設定漏れ

### 改善提案
1. vision設定を含むノードのテンプレートに、`variable_selector`の設定例を必ず含める
2. 画像処理を行うワークフローでは、画像ファイルの参照パスを明確に文書化する
3. vision設定のバリデーションルールを強化し、`variable_selector`が空の場合はエラーとする
## ケース4: 音声認識テスト - エラー原因分析

### エラー内容
```
Run failed: 2 validation errors for IfElseNodeData 
cases.0.logical_operator Field required [type=missing, input_value={'case_id': 'true', 'cond...or': ['sys', 'files']}]}, input_type=dict] 
cases.0.conditions.0.comparison_operator Input should be 'contains', 'not contains', 'start with', 'end with', 'is', 'is not', 'empty', 'not empty', 'in', 'not in', 'all of', '=', '≠', '>', '<', '≥', '≤', 'null', 'not null', 'exists' or 'not exists' [type=literal_error, input_value='is not empty', input_type=str]
```

### エラー原因
IF-ELSEノードに2つのバリデーションエラーがある：
1. logical_operatorフィールドが必須だが欠落している
2. comparison_operatorに無効な値'is not empty'が設定されている

### 詳細分析
1. **問題箇所1**: file_check_node（73-83行目）
   ```yaml
   cases:
   - case_id: 'true'
     conditions:
     - comparison_operator: is not empty  # 誤り
       id: file_check_condition
       value: ''
       variable_selector:
       - sys
       - files
     # logical_operatorが欠落
   ```

2. **正しい構造**（在庫管理判定ワークフローを参考）:
   ```yaml
   cases:
   - case_id: 'true'
     conditions:
     - comparison_operator: not empty  # 正しい値
       id: file_check_condition
       value: ''
       variable_selector:
       - sys
       - files
     logical_operator: and  # 必須フィールド
   ```

### 根本原因
1. **logical_operator欠落**: conditionsが1つしかない場合でも、logical_operatorフィールドは必須
2. **comparison_operator誤り**: ケース1と同じく、'is not empty'は無効な値

### 修正方法
```yaml
cases:
- case_id: 'true'
  conditions:
  - comparison_operator: not empty  # 'is not empty'から修正
    id: file_check_condition
    value: ''
    variable_selector:
    - sys
    - files
  logical_operator: and  # 追加（conditionsが1つでも必須）
```

### 追加の観察事項
1. **複数のエラーパターン**:
   - ケース1と同じcomparison_operatorの誤り
   - さらに必須フィールドの欠落という新たな問題

2. **成功例との比較**:
   - 成功しているYMLでは、単一条件でも必ず`logical_operator: and`が設定されている
   - `case_id`と`id`は同じ値を設定する必要がある

3. **エラーパターン**:
   - if-elseノードの必須フィールドを把握していない
   - テンプレートをコピーした際に、必須フィールドを削除してしまう
   - 自然な英語表現（"is not empty"）を使用してしまう

### 改善提案
1. if-elseノードの必須フィールドを明確に文書化する
2. 単一条件でも`logical_operator`が必須であることを強調する
3. comparison_operatorの正しい値リストをテンプレートに含める
4. コードチェックリストにif-elseノードの必須フィールド確認を追加する
5. `case_id`と`id`の値を一致させる必要があることを明記する